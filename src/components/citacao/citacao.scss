@use '../../styles/variables';

// Mixins 
@mixin button-style($bg-color, $text-color, $hover-bg, $hover-text, $border-color: $bg-color) {
  background-color: $bg-color;
  color: $text-color;
  border: 2px solid $border-color;
  padding: 0.875rem 1.75rem;
  border-radius: 12px;
  font-weight: 500;
  font-size: 0.9rem;
  text-transform: none;
  letter-spacing: 0.3px;
  transition: all 0.25s cubic-bezier(0.4, 0, 0.2, 1);
  box-shadow: 0 2px 8px rgba($bg-color, 0.15);
  cursor: pointer;
  position: relative;
  overflow: hidden;
  min-height: 44px; 
  display: flex;
  align-items: center;
  justify-content: center;

  &::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 0;
    height: 0;
    border-radius: 50%;
    background: rgba(255, 255, 255, 0.1);
    transition: all 0.3s ease;
    transform: translate(-50%, -50%);
  }

  &:hover:not(:disabled) {
    background-color: $hover-bg;
    color: $hover-text;
    border-color: $hover-bg;
    transform: translateY(-1px);
    box-shadow: 0 4px 16px rgba($hover-bg, 0.25);

    &::before {
      width: 120%;
      height: 120%;
    }
  }

  &:active:not(:disabled) {
    transform: translateY(0);
    box-shadow: 0 2px 8px rgba($hover-bg, 0.2);
  }

  &:disabled {
    opacity: 0.5;
    cursor: not-allowed;
    transform: none;
    box-shadow: 0 1px 4px rgba($bg-color, 0.1);

    &::before {
      display: none;
    }
  }
}

@mixin card-style {
  background: variables.$secondary-bg;
  backdrop-filter: blur(20px);
  border-radius: 24px;
  padding: 3rem 2.5rem;
  box-shadow: 
    0 20px 40px rgba(0, 0, 0, 0.08),
    0 0 0 1px rgba(255, 255, 255, 0.1);
  position: relative;
  width: 100%;
  max-width: 900px;
  box-sizing: border-box;

  &::before {
    content: '';
    position: absolute;
    inset: 0;
    padding: 1px;
    border-radius: inherit;
    background: linear-gradient(135deg, rgba(255, 255, 255, 0.2), transparent);
    mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
    mask-composite: xor;
  }
}

.citacao-container {
  @include card-style;
  text-align: center;
  margin: 0 auto;
  animation: fadeInUp 0.6s cubic-bezier(0.4, 0, 0.2, 1);
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  box-sizing: border-box;

  .blockquote {
    position: relative;
    flex: 1;
    display: flex;
    flex-direction: column;
    justify-content: center;
    padding: 2rem 0;

    &::before {
      content: '"';
      font-size: 5rem;
      color: rgba(variables.$accent-color, 0.12);
      position: absolute;
      top: -1rem;
      left: -0.5rem;
      font-family: Georgia, 'Times New Roman', serif;
      line-height: 1;
      pointer-events: none;
      user-select: none;
    }

    p {
      font-size: clamp(1.25rem, 3vw, 1.5rem) !important;
      line-height: 1.7 !important;
      color: variables.$text-primary;
      margin-bottom: 2rem !important;
      font-weight: 400;
      font-style: italic;
      position: relative;
      z-index: 1;
      padding: 0 2rem;
      min-height: 3.5rem;
      display: flex;
      align-items: center;
      justify-content: center;

      &.loading {
        color: variables.$accent-color;
        font-style: normal;

        &::after {
          content: '|';
          animation: blink 1s infinite;
          margin-left: 0.25rem;
        }
      }
    }

    .blockquote-footer {
      font-size: 1.1rem;
      color: variables.$text-secondary;
      font-weight: 500;
      margin-top: 0;

      cite {
        color: variables.$accent-color;
        font-style: normal;
        font-weight: 600;

        &::before {
          content: 'â€” ';
          color: variables.$text-secondary;
          font-weight: 400;
        }
      }
    }
  }

  .controls-container {
    display: flex;
    flex-direction: column;
    gap: 2rem;
    margin-top: 2rem;
  }

  .btn-group {
    display: flex;
    gap: 0.75rem;
    justify-content: center;
    flex-wrap: wrap;
    min-height: 44px;

    .btn {
      @include button-style(
        rgba(variables.$text-primary, 0.08), 
        variables.$text-primary, 
        variables.$accent-color, 
        white,
        rgba(variables.$text-primary, 0.15)
      );

      flex: 0 0 auto;
      min-width: 120px;

      &.btn-dark {
        @include button-style(#34495e, white, #2c3e50, white);
      }

      &.btn-primary {
        @include button-style(variables.$accent-color, white, #2980b9, white);
      }

      &.btn-secondary {
        @include button-style(variables.$warning-color, white, #d35400, white);
      }

      &.btn-outline-dark {
        @include button-style(
          transparent, 
          variables.$text-primary, 
          #34495e, 
          white,
          rgba(#34495e, 0.2)
        );
      }

      &.btn-outline-primary {
        @include button-style(
          transparent, 
          variables.$accent-color, 
          variables.$accent-color, 
          white,
          rgba(variables.$accent-color, 0.3)
        );
      }

      &.btn-outline-secondary {
        @include button-style(
          transparent, 
          variables.$warning-color, 
          variables.$warning-color, 
          white,
          rgba(variables.$warning-color, 0.3)
        );
      }
    }
  }

  .next-quote-container {
    display: flex;
    justify-content: center;

    .btn-success {
      @include button-style(variables.$success-color, white, #229954, white);
      font-size: 1.1rem !important;
      padding: 1.125rem 2.5rem !important;
      border-radius: 16px;
      font-weight: 600;
      min-width: 220px;
      box-shadow: 0 4px 16px rgba(variables.$success-color, 0.25);

      &:hover:not(:disabled) {
        box-shadow: 0 6px 24px rgba(variables.$success-color, 0.35);
      }
    }
  }
}

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes blink {
  0%, 50% { opacity: 1; }
  51%, 100% { opacity: 0; }
}

.loading-state {
  .blockquote p {
    animation: pulse 1.5s ease-in-out infinite;
  }

  .btn-group .btn:not(.btn-dark):not(.btn-primary):not(.btn-secondary) {
    pointer-events: none;
    opacity: 0.7;
  }
}

@keyframes pulse {
  0%, 100% { opacity: 1; }
  50% { opacity: 0.7; }
}

@media (max-width: 768px) {
  .citacao-container {
    padding: 2rem 1.5rem;

    .blockquote {
      padding: 1.5rem 0;

      &::before {
        font-size: 3.5rem;
        top: -0.5rem;
        left: 0;
      }

      p {
        padding: 0 1rem;
        min-height: 4rem;
      }

      .blockquote-footer {
        font-size: 1rem;
      }
    }

    .controls-container {
      gap: 1.5rem;
    }

    .btn-group {
      gap: 0.5rem;

      .btn {
        min-width: 100px;
        padding: 0.75rem 1.25rem;
        font-size: 0.85rem;
      }
    }

    .next-quote-container .btn-success {
      font-size: 1rem !important;
      padding: 1rem 2rem !important;
      min-width: 180px;
    }
  }
}

@media (max-width: 480px) {
  .citacao-container {
    padding: 1.75rem 1rem;

    .blockquote {
      p {
        padding: 0 0.5rem;
      }

      .blockquote-footer {
        font-size: 0.9rem;
      }
    }

    .btn-group {
      flex-direction: column;
      align-items: center;

      .btn {
        min-width: 160px;
        width: 100%;
        max-width: 200px;
      }
    }

    .next-quote-container .btn-success {
      min-width: 160px;
      width: 100%;
      max-width: 200px;
    }
  }
}

@media (min-width: 1280px) {
  .citacao-container {
    max-width: 1100px;
    padding: 3.5rem 3rem;
  }

  .blockquote p {
    font-size: 1.75rem !important;
  }
}

@media (prefers-reduced-motion: reduce) {
  * {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
  }
}

.btn:focus {
  outline: 2px solid variables.$accent-color;
  outline-offset: 2px;
}